// Two players are playing a game of Tower Breakers! Player 1 always moves first, and both players always play optimally.The rules of the game are as follows:

// Initially there are n towers.
// Each tower is of height m.
// The players move in alternating turns.
// In each turn, a player can choose a tower of height x and reduce its height to y, where 1<=y<x and y evenly divides x.
// If the current player is unable to make a move, they lose the game.
// Given the values of  and , determine which player will win. If the first player wins, return 1. Otherwise, return 2.

// The first line contains a single integer t, the number of test cases.
// Each of the next t lines describes a test case in the form of 2 space-separated integers, n and m.

// Example. 

// There are 2 towers, each 6 units tall. Player 1 has a choice of two moves:
// - remove 3 pieces from a tower to leave 3 as 6 modulo 3 = 0
// - remove 5 pieces to leave 1

// Let Player 1 remove 3. Now the towers are 3 and 6 units tall.

// Player 2 matches the move. Now the towers are both 3 units tall.

// Now Player 1 has only one move.

// Player 1 removes 2 pieces leaving 1. Towers are 1 and 2 units tall.
// Player 2 matches again. Towers are both 1 unit tall.

// Player 1 has no move and loses. Return 2.

'use strict';

const fs = require('fs');
const inputString = fs.readFileSync('./inputcode03.txt', 'utf8').split('\n');
let currentLine = 0;

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'towerBreakers' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts following parameters:
 *  1. INTEGER n
 *  2. INTEGER m
 */

function towerBreakers(n, m) {
    // Si el número de torres es divisible por 2 o la altura de las torres es 1, el jugador 2 ganará
    if (n % 2 === 0 || m === 1) {
        return 2;
    }
    
    // De lo contrario, el jugador 1 ganará
    return 1;
}

function main() {
    const ws = fs.createWriteStream('./outputcode03.txt');

    const t = parseInt(readLine().trim(), 10);

    for (let tItr = 0; tItr < t; tItr++) {
        const firstMultipleInput = readLine().replace(/\s+$/g, '').split(' ');

        const n = parseInt(firstMultipleInput[0], 10);

        const m = parseInt(firstMultipleInput[1], 10);

        const result = towerBreakers(n, m);

        ws.write(result + '\n');
    }

    ws.end();
}

main();