// Given an array of integers representing the color of each sock, determine how many pairs of socks with matching colors there are.
// sockMerchant has the following parameter(s):

// int n: the number of socks in the pile
// int ar[n]: the colors of each sock
// Returns

// int: the number of pairs

'use strict';

// const fs = require('fs');

// process.stdin.resume();
// process.stdin.setEncoding('utf-8');

// let inputString = '';
// let currentLine = 0;

// process.stdin.on('data', function(inputStdin) {
//     inputString += inputStdin;
// });

// process.stdin.on('end', function() {
//     inputString = inputString.split('\n');

//     main();
// });

const fs = require('fs');
const inputString = fs.readFileSync('./inputcode00.txt', 'utf8').split('\n');
let currentLine = 0;

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'sockMerchant' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts following parameters:
 *  1. INTEGER n
 *  2. INTEGER_ARRAY ar
 */

function sockMerchant(n, ar) {
    // Write your code here
    let pairs = 0;
    const colorCount = {};
    
    for (let i = 0; i < n; i++) {
        const color = ar[i];
        if (colorCount[color]) {
            colorCount[color]++;
        } else {
            colorCount[color] = 1;
        }
    }
    
    for (const color in colorCount) {
        const count = colorCount[color];
        pairs += Math.floor(count / 2);
    }
    
    return pairs;

}

function main() {
    // const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const ws = fs.createWriteStream('outputcode00.txt');

    const n = parseInt(readLine().trim(), 10);

    const ar = readLine().replace(/\s+$/g, '').split(' ').map(arTemp => parseInt(arTemp, 10));

    const result = sockMerchant(n, ar);

    ws.write(result + '\n');

    ws.end();
}

main();
