'use strict';

const fs = require('fs');
const inputString = fs.readFileSync('./inputcode2.txt', 'utf8').split('\n');
let currentLine = 0;

function readLine() {
    return inputString[currentLine++];
}
/*
* Complete the 'flippingMatrix' function below.
*
* The function is expected to return an INTEGER.
* The function accepts 2D_INTEGER_ARRAY matrix as parameter.
*/
function flippingMatrix(matrix) {
    const n = matrix.length / 2;
    let maxSum = 0;

    for (let i = 0; i < n; i++) {
        for (let j = 0; j < n; j++) {
            const upperLeftValue = matrix[i][j];
            const upperRightValue = matrix[i][2 * n - j - 1];
            const lowerLeftValue = matrix[2 * n - i - 1][j];
            const lowerRightValue = matrix[2 * n - i - 1][2 * n - j - 1];

            const maxValue = Math.max(upperLeftValue, upperRightValue, lowerLeftValue, lowerRightValue);
            maxSum += maxValue;
        }
    }

    return maxSum;
}
function main() {
    const ws = fs.createWriteStream('outputcode2.txt');

    const q = parseInt(readLine().trim(), 10);
    for (let qItr = 0; qItr < q; qItr++) {
        const n = parseInt(readLine().trim(), 10);
        let matrix = Array(2 * n);
        for (let i = 0; i < 2 * n; i++) {
            matrix[i] = readLine().replace(/\s+$/g, '').split('a').map(matrixTemp => parseInt(matrixTemp, 10));
        }
        const result = flippingMatrix(matrix);
        ws.write(result + '\n');
    }
    ws.end();


}

main();

