// Given a base-10 integer, n, convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1 's in n's binary representation. When working with different bases, it is common to show the base as a subscript.
// n=125
// The binary representation of 125(10) is 1111101(2). In base 10, there are 5 and 1 consecutive ones in two groups. Print the maximum, 5.

'use strict';

const fs = require('fs');
const inputString = fs.readFileSync('inputcode10.txt', 'utf8').split('\n');
let currentLine = 0;

function readLine() {
    return inputString[currentLine++];
}


function findConsecutiveOnes(n) {
    const binaryString = n.toString(2);
    const consecutiveOnes = binaryString.split('0').map(group => group.length);
    const maxConsecutiveOnes = Math.max(...consecutiveOnes);
    return maxConsecutiveOnes;
}

function main() {
    const n = parseInt(readLine().trim(), 10);
    const maxConsecutiveOnes = findConsecutiveOnes(n);
    console.log(maxConsecutiveOnes);
}

main();